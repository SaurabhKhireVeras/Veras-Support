/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

       implementation 'com.google.guava:guava:30.1.1-jre'
	implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
      implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '9.4.0.jre11'
      implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.45' 
    implementation group: 'org.hibernate', name: 'hibernate-validator-annotation-processor', version: '4.2.0.Final'
      implementation group: 'com.zaxxer', name: 'HikariCP', version: '2.7.9'
      implementation group: 'commons-io', name: 'commons-io', version: '2.6'
      implementation group: 'com.codoid.products', name: 'fillo', version: '1.21'
}

application {
    // Define the main class for the application.
    mainClass = 'apiautomationsendreport.App'
}

task copyResources(type: Copy) {
    
    from "${projectDir}/config"
    into "${buildDir}/libs/config"

}

task runnableJar(type: Jar) {

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'com.verasretail.apiautomationsendreport.ApiAutomationSendReport'
    }
    archiveBaseName = project.name + '-runnable'
    zip64 true
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }}
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    with jar
}

task createZip(dependsOn: ['copyResources', 'runnableJar'], type: Zip){
     
     archiveFileName = "ApiAutomationSendReport.zip"
     destinationDirectory = file("${buildDir}")
     from"${buildDir}/libs"  
}
